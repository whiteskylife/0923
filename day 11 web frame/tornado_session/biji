CSRF：

Tornado中的夸张请求伪造和Django中的相似，跨站伪造请求(Cross-site request forgery)



作用：
限制post请求


第一次发get请求，服务器端给与一个标识（token，相当于身份证），第二次请求（POST）过来带着身份证就允许访问
如果服务器遇到没有拿身份证的请求，服务器端一概不接受



做一个CSRF验证：

app.py

class CsrfHandler(tornado.web.RequestHandler):

    def get(self, *args, **kwargs):
        self.render('csrf.html')

    def post(self, *args, **kwargs):
        self.write('csrf.post')


settings = {
    'template_path': 'views',
    'static_path': 'statics',
    'xsrf_cookies': True            # 开启CSRF伪造请求验证
}

application = tornado.web.Application([
    (r"/csrf", CsrfHandler),
], **settings)

if __name__ == "__main__":
    application.listen(8000)
    tornado.ioloop.IOLoop.instance().start()



页面中，不带下面这段代码是无法完成CSRF验证的，xsrf_form_html()信息隐藏在页面中
{% raw xsrf_form_html() %}





jQuery ajax：
http://jquery.cuishifeng.cn/jQuery.Ajax.html

参数：

data:发送到服务器的数据。将自动转换为请求字符串格式。GET 请求中将附加在 URL 后。

url:一个用来包含发送请求的URL字符串。

方法：
success(data, textStatus, jqXHR)
请求成功后的回调函数。参数：由服务器返回，并根据dataType参数进行处理后的数据；描述状态的字符串。还有 jqXHR（在jQuery 1.4.x的中，XMLHttpRequest） 对象 。在jQuery 1.5， 成功设置可以接受一个函数数组。每个函数将被依次调用

下面这样发起post请求时，浏览器提示403Forbidden，没有携带xsrf字符串

        function SubmitCsrf() {
            $.post({
                url:'/csrf',
                data: {'k1': 'v1'},
                success: function (callback) {
                    console.log(callback);
                }
            });
        }

下面这样发起post请求时，通过：
        function SubmitCsrf() {
            var nid = getCookie('_xsrf');
            $.post({
                url:'/csrf',
                data: {'k1': 'v1', "_xsrf": nid},
                success: function (callback) {
                    console.log(callback);
                }
            });
        }


//    function getCookie(name) {
//        var r = document.cookie.match("\\b" + name + "=([^;]*)\\b");
//        return r ? r[1] : undefined;
//    }

//    jQuery.post = function(url, args, callback) {
//    args._xsrf = getCookie("_xsrf");
//    $.ajax({url: url, data: $.param(args), dataType: "text", type: "POST",
//        success: function(response) {
//        callback(eval("(" + response + ")"));
//    }});
//};










http://www.cnblogs.com/wupeiqi/articles/5703697.html

2、跨浏览器支持

XmlHttpRequest
IE7+, Firefox, Chrome, Opera, etc.
ActiveXObject("Microsoft.XMLHTTP")
IE6, IE5